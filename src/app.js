// Generated by CoffeeScript 1.10.0
(function() {
  var CoffeeTodo, Task, TaskCollection, TaskView, task,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Task = (function(superClass) {
    extend(Task, superClass);

    function Task() {
      return Task.__super__.constructor.apply(this, arguments);
    }

    Task.prototype.defaults = {
      finished: false,
      text: ""
    };

    return Task;

  })(Backbone.Model);

  TaskCollection = (function(superClass) {
    extend(TaskCollection, superClass);

    function TaskCollection() {
      return TaskCollection.__super__.constructor.apply(this, arguments);
    }

    TaskCollection.prototype.model = Task;

    return TaskCollection;

  })(Backbone.Collection);

  TaskView = (function(superClass) {
    extend(TaskView, superClass);

    function TaskView() {
      return TaskView.__super__.constructor.apply(this, arguments);
    }

    return TaskView;

  })(Backbone.View);

  CoffeeTodo = (function() {
    function CoffeeTodo() {}

    return CoffeeTodo;

  })();

  $(function() {
    var app;
    return app = new CoffeeTodo;
  });

  task = new Task({
    text: "Wash the dishes"
  });

  console.log(task.get('text'));

  console.log(task.get('finished'));

}).call(this);
